name: Pull Request Continuous Integration
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  # Run Linter
  linter-job:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Load Cached Venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${% raw %}{{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Linter
        run: poetry run flake8

  # Run Linter
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Load Cached Venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${% raw %}{{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Unit Test
        run: poetry run pytest ml_app/tests
